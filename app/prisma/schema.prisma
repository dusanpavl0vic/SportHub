// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Player {
  id Int @id @default(autoincrement())
  role Role @default(PLAYER)
  email String @unique
  password String
  firstName String
  lastName String
  profilePicture String?
  phoneNumber String?
  birthDate DateTime?
  city String
  status PlayerStatus @default(NO_TEAM)

  teamId Int?
  team Team? @relation(fields: [teamId], references: [id])
}

model Team{
  id Int @id @default(autoincrement())
  role Role @default(TEAM)
  email String @unique
  password String
  teamName String
  profilePicture String?
  city String
  numberOfPlayers Int @default(0)
  sport String
  coachName String?
  coachPhoneNumber String?
  location String?

  //All players in team and pending
  players Player[]
  
  announcements Announcement[]
  groups  Group[]
}

model Announcement{
  id Int @id @default(autoincrement())
  team Team @relation(fields: [teamId], references: [id])
  teamId Int
  title String
  description String?
  date DateTime @default(now())
  pictures Picture[]
}

model Picture{
  id Int @id @default(autoincrement())
  announcement Announcement @relation(fields: [announcementId], references: [id])
  announcementId Int
  url String
}

model Group {
  id      Int     @id @default(autoincrement())
  name    String
  team    Team    @relation(fields: [teamId], references: [id], onDelete: Cascade)
  teamId  Int
  schedules Schedule[]
}

model Schedule {
  id        Int        @id @default(autoincrement())
  group     Group      @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId   Int
  dayOfWeek DayOfWeek
  startTime DateTime?
  endTime   DateTime?

  @@unique([groupId, dayOfWeek])
}

enum Role {
  PLAYER
  TEAM
}

enum DayOfWeek {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}

enum PlayerStatus {
  NO_TEAM
  PENDING
  APPROVED
}


